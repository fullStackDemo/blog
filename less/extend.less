// out: ./dist/extend.css

/*
* Extend
* selector:extend(class) extend the selector onto the class, where the class appear
**/

.nav {
  background: blue;
  &:extend(.inline);
}

.inline {
  color: red;
}

/*
* "all" keyword will extend all instance of ".b" e.g. '.d.b' '.b.d'
**/

//demo1
.a:extend(.b) {
  background: #000;
}

.b {
  background: red;
}

.c:extend(.d all) {
  background: yellow;
}

// demo2
.d {
  background: orange;

  div {
    color: #000;
  }
}

.demo .d {
  background: white;
}

//demo3

.e:extend(.f, .g):extend(.h) {
  background: #eee;
}

.f {
  background: #fff;
}

.g {
  background: #999;
}

.h {
  background: #aaa;
}

//demo4

.big-1,
.big-2:extend(.Big2),
.big-3:extend(.Big3) {
  background: #000;
}

.Big2 {
  background: red;
}

.Big3 {
  background: green;
}

pre:hover:extend(div pre){
  background: #000;  
}

div pre {
  background: red;
}

/*
* variable interpolation
**/

@my-selector: banner;

.@{my-selector}{
  color: red;
}

*.class{
  color: blue;
}

* > .div {
  background: #000;
}


//extend all !!replace the selector

.ab.test,
.test.m{
  color: red;
}

.replace{
  &:extend(.test all);
}

.testA{
  clear: both;
}
.testB:extend(.testA){}


/**
* selector interpolation with extend
**/


//not work
@test2: someName;
.@{test2}{
  clear: both;
}

.some-class:ectend(.@{test2}){}

//works
.some-class{
  color: rebeccapurple
}
@test3: someName2;

.@{test3}:extend(.some-class){}


